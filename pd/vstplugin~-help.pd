#N canvas 463 40 565 599 10;
#N canvas 346 106 450 485 output 0;
#X obj 110 255 nbx 5 14 -100 0 0 0 empty empty Volume 0 -8 0 10 -262144
-1 -1 -100 256;
#X obj 180 255 tgl 15 0 empty empty DSP 17 7 0 10 -262144 -1 -1 0 1
;
#X obj 4 34 inlet~;
#X obj 54 35 inlet~;
#X obj 4 454 dac~;
#X obj 5 420 *~;
#X obj 56 422 *~;
#X obj 107 385 line~;
#X msg 108 360 \$1 50;
#X obj 109 336 dbtorms;
#X obj 109 313 + 100;
#X msg 107 62 -100;
#X obj 108 35 loadbang;
#X msg 227 98 \; pd dsp \$1;
#X obj 112 113 vu 15 120 empty empty -1 -8 0 10 -66577 -1 1 0;
#X obj 169 115 vu 15 120 empty empty -1 -8 0 10 -66577 -1 1 0;
#X obj 12 78 env~;
#X obj 60 77 env~;
#X obj 12 99 - 100;
#X obj 61 102 - 100;
#X connect 0 0 10 0;
#X connect 1 0 13 0;
#X connect 2 0 5 0;
#X connect 2 0 16 0;
#X connect 3 0 6 0;
#X connect 3 0 17 0;
#X connect 5 0 4 0;
#X connect 6 0 4 1;
#X connect 7 0 5 1;
#X connect 7 0 6 1;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 11 0 0 0;
#X connect 12 0 11 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 14 0;
#X connect 19 0 15 0;
#X coords 0 -1 1 1 120 180 2 100 100;
#X restore 23 371 pd output;
#N canvas 219 289 450 355 open 0;
#X obj 36 294 outlet~;
#X obj 91 294 outlet~;
#X obj 110 128 bng 15 250 50 0 empty empty file 17 7 0 10 -262144 -1
-1;
#X msg 36 64 symbol;
#X obj 36 40 loadbang;
#X obj 28 133 openpanel;
#X obj 110 151 bng 15 250 50 0 empty empty play 17 7 0 10 -4034 -1
-1;
#X obj 110 175 bng 15 250 50 0 empty empty stop 17 7 0 10 -258113 -1
-1;
#X obj 36 204 symbol;
#X obj 35 255 readsf~ 2;
#X obj 110 196 tgl 15 0 empty empty loop 17 7 0 10 -262144 -1 -1 0
1;
#X msg 120 227 0;
#X obj 112 256 spigot;
#X msg 35 227 open \$1 \, 1;
#X text 109 106 Player;
#X connect 2 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 8 1;
#X connect 6 0 8 0;
#X connect 7 0 11 0;
#X connect 8 0 13 0;
#X connect 9 0 0 0;
#X connect 9 1 1 0;
#X connect 9 2 12 0;
#X connect 10 0 12 1;
#X connect 11 0 9 0;
#X connect 12 0 8 0;
#X connect 13 0 9 0;
#X coords 0 -1 1 1 70 120 2 100 100;
#X restore 23 174 pd open;
#X msg 194 215 open \$1;
#X obj 194 170 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 194 190 openpanel;
#X msg 202 245 close;
#X msg 210 290 vis \$1;
#X obj 210 270 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 217 333 bypass \$1;
#X obj 217 313 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 232 395 info;
#N canvas 91 200 1094 481 message-outlet 0;
#X obj 9 46 inlet;
#X obj 36 91 print vstplugin~;
#X obj 9 67 t a a;
#X obj 10 141 unpack f f;
#X floatatom 10 162 5 0 0 0 - - -;
#X floatatom 67 164 5 0 0 0 - - -;
#X floatatom 115 144 5 0 0 0 - - -;
#X obj 9 121 route param_value param_count, f 36;
#X text 6 180 index;
#X text 67 180 value;
#X floatatom 222 184 5 0 0 0 - - -;
#X text 218 202 index;
#X obj 222 162 unpack f s;
#X symbolatom 279 184 16 0 0 0 - - -;
#X text 278 201 name;
#X obj 222 142 route param_name, f 27;
#X floatatom 381 208 5 0 0 0 - - -;
#X text 377 226 index;
#X obj 381 186 unpack f s;
#X symbolatom 438 208 16 0 0 0 - - -;
#X floatatom 546 233 5 0 0 0 - - -;
#X text 542 251 index;
#X obj 546 211 unpack f s;
#X symbolatom 603 233 16 0 0 0 - - -;
#X obj 381 166 route param_label, f 28;
#X obj 546 191 route param_display, f 27;
#X text 437 225 label;
#X text 602 250 display;
#X floatatom 14 299 5 0 0 0 - - -;
#X text 14 315 index;
#X obj 173 307 route program_name, f 29;
#X floatatom 173 352 5 0 0 0 - - -;
#X text 169 370 index;
#X obj 173 330 unpack f s;
#X symbolatom 230 352 16 0 0 0 - - -;
#X text 229 369 name;
#X obj 14 278 route program program_count;
#X floatatom 93 303 5 0 0 0 - - -;
#X text 93 319 count;
#X text 115 163 count;
#X obj 344 356 s \$0-program-data;
#X obj 344 333 route program_data bank_data, f 39;
#X obj 459 356 s \$0-bank-data;
#X text 148 34 param_count <f>: number of parameters;
#X text 148 16 param_value <f> <f>: parameter index + value;
#X text 148 53 param_name <f> <s>: parameter index + name;
#X text 149 73 param_label <f> <s>: parameter index + label (unit of
measurement), f 67;
#X text 149 93 param_display <f> <s>: parameter index + display (stringified
value), f 69;
#X text 589 37 program_count <f>: number of programs;
#X text 589 17 program <f>: index of current program;
#X text 588 56 program_name <f> <s>: program index + name;
#X text 589 75 program_data <list>: current program data;
#X text 588 94 bank_data <list>: current bank data;
#X text 739 143 param_automated <f> <f>: parameter index + value;
#X text 738 237 sysex <list>: system exclusive message (from the plugin)
;
#X obj 705 262 t a;
#X obj 575 359 route param_automated, f 27;
#X obj 734 411 unpack f f f, f 14;
#X floatatom 734 432 5 0 0 0 - - -;
#X floatatom 774 432 5 0 0 0 - - -;
#X floatatom 815 433 5 0 0 0 - - -;
#X text 728 450 status;
#X text 771 451 data1;
#X text 814 451 data2;
#X obj 575 380 unpack f f;
#X floatatom 575 402 5 0 0 0 - - -;
#X floatatom 632 403 5 0 0 0 - - -;
#X text 574 420 index;
#X text 629 421 value;
#X obj 734 390 route midi, f 18;
#X text 738 162 (this message is sent whenever you change a parameter
in the GUI. this is useful if you want to record automation data),
f 44;
#X text 737 213 midi <list>: MIDI message (from the plugin);
#X connect 0 0 2 0;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 4 0;
#X connect 3 1 5 0;
#X connect 7 0 3 0;
#X connect 7 1 6 0;
#X connect 7 2 15 0;
#X connect 12 0 10 0;
#X connect 12 1 13 0;
#X connect 15 0 12 0;
#X connect 15 1 24 0;
#X connect 18 0 16 0;
#X connect 18 1 19 0;
#X connect 22 0 20 0;
#X connect 22 1 23 0;
#X connect 24 0 18 0;
#X connect 24 1 25 0;
#X connect 25 0 22 0;
#X connect 25 1 55 0;
#X connect 30 0 33 0;
#X connect 30 1 41 0;
#X connect 33 0 31 0;
#X connect 33 1 34 0;
#X connect 36 0 28 0;
#X connect 36 1 37 0;
#X connect 36 2 30 0;
#X connect 41 0 40 0;
#X connect 41 1 42 0;
#X connect 41 2 56 0;
#X connect 55 0 36 0;
#X connect 56 0 64 0;
#X connect 56 1 69 0;
#X connect 57 0 58 0;
#X connect 57 1 59 0;
#X connect 57 2 60 0;
#X connect 64 0 65 0;
#X connect 64 1 66 0;
#X connect 69 0 57 0;
#X restore 81 347 pd message-outlet;
#X obj 194 423 s \$0-msg;
#X obj 30 301 r \$0-msg;
#X text 252 246 close the plugin;
#X text 260 290 show/hide editor;
#X text 286 331 bypass on/off;
#X text 269 394 print plugin info to console;
#X text 192 454 parameters;
#X text 281 453 FX programs/banks;
#N canvas 388 79 726 527 parameter 0;
#X obj 98 68 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X obj 17 21 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X msg 17 116 param_set \$1 \$2;
#X obj 38 213 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X msg 58 399 param_count;
#X msg 62 431 param_list;
#X msg 28 171 param_get \$1;
#X obj 28 150 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X obj 46 276 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X obj 55 337 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X msg 37 239 param_name \$1;
#X msg 44 302 param_label \$1;
#X msg 53 363 param_display \$1;
#X msg 65 460 param_dump;
#X obj 17 498 s \$0-msg;
#X text 156 67 index;
#X text 123 103 set parameter;
#X text 84 148 index;
#X text 115 172 get parameter;
#X text 131 239 get parameter name;
#X text 95 213 index;
#X text 104 275 index;
#X text 143 297 get parameter label (the unit of measurement \, e.g.
dB \, ms), f 33;
#X text 112 337 index;
#X text 162 361 get parameter display (the stringified value), f 24
;
#X text 139 399 get number of parameters;
#X text 140 460 dump parameter state (index + value);
#X text 139 434 list all parameters (index + name);
#X symbolatom 25 43 10 0 0 0 - - -;
#X text 80 19 float value (0.0 - 1.0);
#X text 120 118 (index \, value);
#X text 229 71 a VST parameter can take two forms:;
#X text 93 42 string value (not supported by all plugins);
#X text 230 129 see [param_set <f> <f>( and [param_get <f>(;
#X text 232 207 see [param_get <f> <s>( and [param_display <f>(;
#X text 231 153 2) a string representation which is mainly used for
display \, but many plugins also allow you to set the parameter in
this way. it corresponds to the symbol box in the generic editor.,
f 47;
#X text 229 91 1) a 'normalized' float value which is always in the
range 0 to 1 and corresponds to the slider position in the generic
editor., f 47;
#X obj 17 90 list prepend 0;
#X connect 0 0 37 1;
#X connect 1 0 37 0;
#X connect 2 0 14 0;
#X connect 3 0 10 0;
#X connect 4 0 14 0;
#X connect 5 0 14 0;
#X connect 6 0 14 0;
#X connect 7 0 6 0;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 10 0 14 0;
#X connect 11 0 14 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X connect 28 0 37 0;
#X connect 37 0 2 0;
#X restore 193 474 pd parameter;
#X text 21 83 inlets:;
#X text 21 128 outlets:;
#X text 91 329 message output:;
#X text 22 102 signal inlets (the leftmost inlet also takes messages)
;
#N canvas 672 104 609 465 midi 0;
#X obj 33 442 s \$0-msg;
#X msg 33 34 midi_raw <list>;
#X msg 51 111 midi_note 1 60 127;
#X msg 62 147 midi_noteoff 1 60;
#X msg 70 205 midi_cc 1 64 \$1;
#X msg 70 182 127;
#X msg 102 182 0;
#X msg 40 59 midi_sysex <list>;
#X msg 76 264 midi_bend 1 \$1;
#X obj 79 240 hsl 128 15 -1 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 82 296 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X text 136 35 send raw MIDI message (list of bytes);
#X text 155 59 send MIDI system exclusive message (list of bytes);
#X text 49 89 convenience methods:;
#X text 179 111 note on: channel (1-16) \, pitch \, velocity;
#X text 182 148 note off: channel \, pitch \, [velocity];
#X text 182 205 CC: channel \, number \, value;
#X text 129 183 (sustain pedal on/off);
#X text 175 265 pitchbend: channel \, bend (-1 to 1);
#X text 203 316 program change: channel \, program;
#X text 242 353 polyphonic aftertouch: channel \, pitch \, pressure
;
#X text 211 395 channel aftertouch: channel \, pressure;
#X msg 82 316 midi_program 1 \$1;
#X msg 87 355 midi_polytouch 1 60 127;
#X msg 95 394 midi_touch 1 127;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 8 0;
#X connect 10 0 22 0;
#X connect 22 0 0 0;
#X connect 23 0 0 0;
#X connect 24 0 0 0;
#X restore 399 473 pd midi;
#X f 13;
#X text 399 455 MIDI messages;
#N canvas 814 225 469 439 transport 0;
#X obj 22 299 s \$0-msg;
#X msg 22 78 tempo \$1;
#X obj 22 56 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X msg 34 137 time_signature \$1 \$2;
#X msg 34 111 4 4;
#X msg 96 112 3 4;
#X text 63 111 4/4;
#X text 127 112 3/4;
#X msg 43 184 play \$1;
#X obj 43 163 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 51 211 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X msg 59 262 transport_get;
#X msg 51 229 transport_set \$1;
#X text 102 183 start/stop sequencing;
#X text 19 17 these methods provide timing information to the VST plugin
so you can use arpeggiators \, step sequencers etc.;
#X text 168 113 set time signature (default is 4/4);
#X text 152 261 get current transport position;
#X text 158 228 set transport position (1.0 = one quarter note)*;
#X text 20 337 *) this often doesn't work as expected. I have to do
more experiments to find out how to jump to arbitrary transport positions
and force the plugin to sync immediately.;
#X text 86 57 set the tempo in BPM. this is also relevant for certain
plugin parameters \, e.g. a delay time measured in quarter notes.,
f 51;
#X text 20 377 to simply 'rewind' the sequencer \, [transport_set 0
\, reset( should always work.;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 0 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 8 0 0 0;
#X connect 9 0 8 0;
#X connect 10 0 12 0;
#X connect 11 0 0 0;
#X connect 12 0 0 0;
#X restore 192 523 pd transport;
#X f 16;
#X text 190 504 transport/timing;
#X msg 223 364 reset;
#X text 265 363 reset the plugin (e.g. clear delay lines);
#X obj 24 325 vstplugin~;
#X obj 22 13 cnv 15 350 30 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 31 20 [vstplugin~]: load VST plugins in Pd on all platforms
;
#X text 258 206 the extension (.dll \, .so \, .vst) can be ommited
, f 47;
#X text 260 188 open a plugin (absolute or relative path) \,;
#N canvas 80 276 436 479 creation 0;
#X text 25 170 -sp: prefer single precision (default on single precision
Pd), f 62;
#X text 26 186 -dp: prefer double precision (default on double precision
Pd), f 62;
#X text 25 100 -vstgui: use the VST plugin GUI (default on Windows
and Linux), f 62;
#X text 25 137 -nogui: don't use any GUI.;
#X obj 21 162 cnv 2 400 2 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 13 12 vstplugin~ takes the following optional creation arguments
(in the given order):, f 40;
#X text 14 218 file:;
#X text 14 253 nin \, nout:;
#X text 83 252 the number of input and output channels (default is
2), f 30;
#X text 83 216 a plugin to load on creation (see the 'open' message)
, f 28;
#X text 14 79 flags:;
#X obj 16 291 cnv 15 80 20 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 18 292 examples:;
#X text 13 319 [vstplugin~ -pdgui myplugins/Chorus 2 4];
#X text 33 341 2 input channels \, 4 output channels \, using the generic
Pd GUI and loading the plugin "Chorus" on creation., f 45;
#X text 11 431 [vstplugin~];
#X text 39 449 2 in \, 2 out \, default GUI;
#X text 13 386 [vstplugin~ -nogui 1 2];
#X text 34 405 1 in \, 2 out \, no GUI;
#X text 25 118 -pdgui: use the generic Pd GUI (default on MacOS);
#X text 13 49 [flags...] \, [file] \, [nin \, nout];
#X restore 150 55 pd creation arguments;
#X text 23 55 creation arguments:;
#X text 21 146 signal outlets + 1 message outlet;
#N canvas 387 235 630 442 advanced 0;
#X msg 28 59 precision \$1;
#X msg 61 116 version;
#X msg 52 86 name;
#X msg 28 13 symbol single;
#X msg 36 36 symbol double;
#X obj 28 388 s \$0-msg;
#X text 129 31 on single precision Pd \, the default is 'single';
#X text 128 51 on double precision Pd \, the default is 'double' if
available \, otherwise it is 'single'., f 48;
#X text 129 10 change preferred processing precision;
#X text 90 86 get the plugin name;
#X text 120 115 get the plugin version;
#X msg 70 167 can_do \$1;
#X symbolatom 70 146 24 0 0 0 - - -;
#X text 223 142 query the plugin for special capabilites. you have
to know the query string: some are documented in the VST SDK \, some
are not..., f 44;
#X msg 76 243 vendor_method <int> <int> <float> <list>;
#X text 89 291 the message arguments correspond to 'index' \, 'value'
\, 'opt' and 'ptr' (arbitrary data passed as a list of bytes).;
#X text 90 263 access special functionality of a plugin which is not
available via the standard parameter interface., f 54;
#X text 221 181 you will get a message "can_do" with the query string
+ the result as an integer:, f 42;
#X text 89 320 generally \, you have to know what you're doing \, check
the documentation of the plugin to see what data it expects;
#X text 87 349 you will get a message "vendor_method" with the result
as an integer. the meaning of this value depends on the VST plugin.
, f 54;
#X text 220 211 1: yes \, -1: no \, 0: don't know;
#X connect 0 0 5 0;
#X connect 1 0 5 0;
#X connect 2 0 5 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 11 0 5 0;
#X connect 12 0 11 0;
#X connect 14 0 5 0;
#X restore 308 523 pd advanced;
#X f 14;
#X text 305 504 advanced stuff;
#N canvas 395 307 669 774 preset 0;
#X obj 23 333 s \$0-msg;
#X obj 23 34 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X text 127 54 set program;
#X msg 34 87 program_get;
#X text 114 88 get the current program index;
#X symbolatom 45 123 10 0 0 2 - - -;
#X text 185 201 get the name of a program;
#X obj 56 179 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X msg 77 270 program_count;
#X text 168 269 get number of programs;
#X msg 86 303 program_list;
#X text 171 304 list all programs (index + name);
#X obj 24 437 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 24 457 openpanel;
#X msg 24 479 program_read \$1;
#X obj 33 505 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 33 525 savepanel;
#X msg 33 544 program_write \$1;
#X text 43 437 read program file (.fxp);
#X text 52 505 write program file (.fxp);
#X obj 270 435 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 270 455 openpanel;
#X obj 282 503 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 282 523 savepanel;
#X obj 270 568 s \$0-msg;
#X text 289 435 read bank file (.fxb);
#X text 301 502 write bank file (.fxb);
#X msg 270 476 bank_read \$1;
#X msg 282 545 bank_write \$1;
#X text 115 124 name;
#X text 85 35 index;
#X text 117 177 index;
#X text 177 238 get name of current program;
#X text 23 362 read/write presets files:;
#X obj 24 569 s \$0-msg;
#X text 25 597 your can also deal with the raw .FXP / .FXB data \,
e.g. to build your own preset management in Pd:, f 49;
#N canvas 738 177 650 433 preset-management 0;
#X obj 31 87 hradio 15 1 0 16 empty empty empty 0 -8 0 10 -262144 -1
-1 1;
#X obj 33 271 hradio 15 1 0 16 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X obj 31 197 r \$0-program-data;
#X obj 31 112 t b f;
#X obj 31 156 s \$0-msg;
#X text 138 133 request data;
#X text 32 61 save program in slot:;
#X text 31 249 recall program from slot:;
#X obj 33 296 text get \$0-data;
#X obj 33 338 list trim;
#X obj 33 363 s \$0-msg;
#X obj 31 221 text set \$0-data;
#X text 29 27 program data can be stored in [text] or [array] to build
your own preset banks in Pd, f 47;
#X obj 344 195 text define \$0-data;
#X obj 305 88 loadbang;
#X msg 344 174 clear;
#X obj 305 131 t b b, f 7;
#X obj 305 174 until;
#X msg 305 153 16;
#X obj 305 218 text set \$0-data 1e+007;
#X msg 305 195 list;
#X obj 305 110 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 326 110 initialize;
#X text 386 174 the data:;
#X text 31 178 receive data (from message outlet);
#X msg 31 134 program_data_get;
#X obj 33 317 list prepend program_data_set;
#X connect 0 0 3 0;
#X connect 1 0 8 0;
#X connect 2 0 11 0;
#X connect 3 0 25 0;
#X connect 3 1 11 1;
#X connect 8 0 26 0;
#X connect 9 0 10 0;
#X connect 14 0 21 0;
#X connect 15 0 13 0;
#X connect 16 0 18 0;
#X connect 16 1 15 0;
#X connect 17 0 20 0;
#X connect 18 0 17 0;
#X connect 20 0 19 0;
#X connect 21 0 16 0;
#X connect 25 0 4 0;
#X connect 26 0 9 0;
#X restore 327 604 pd preset-management;
#X text 38 669 get program data as list of bytes;
#X text 27 629 set program data as list of bytes;
#X text 269 635 set bank data as list of bytes;
#X text 275 675 get bank data as list of bytes;
#X obj 28 717 s \$0-msg;
#X obj 269 721 s \$0-msg;
#X text 171 146 set name of current program;
#X text 23 378 .FXP and .FXB files are a standard format recognized
by all conforming VST hosts \, so you can easily exchange your presets
between Pd and other hosts (e.g. your favourite DAW);
#X msg 45 146 program_name_set \$1;
#X msg 56 200 program_name_get \$1;
#X msg 66 238 program_name_get;
#X msg 28 648 program_data_set <list>;
#X msg 41 691 program_data_get;
#X msg 269 654 bank_data_set <list>;
#X msg 277 696 bank_data_get;
#X msg 23 56 program_set \$1;
#X connect 1 0 52 0;
#X connect 3 0 0 0;
#X connect 5 0 45 0;
#X connect 7 0 46 0;
#X connect 8 0 0 0;
#X connect 10 0 0 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 34 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 34 0;
#X connect 20 0 21 0;
#X connect 21 0 27 0;
#X connect 22 0 23 0;
#X connect 23 0 28 0;
#X connect 27 0 24 0;
#X connect 28 0 24 0;
#X connect 45 0 0 0;
#X connect 46 0 0 0;
#X connect 47 0 0 0;
#X connect 48 0 41 0;
#X connect 49 0 41 0;
#X connect 50 0 42 0;
#X connect 51 0 42 0;
#X connect 52 0 0 0;
#X restore 282 474 pd preset;
#X f 17;
#N canvas 1008 314 397 366 gui 0;
#X text 14 95 on Windows and Linux \, the GUI window runs in its own
thread which means that automating the GUI shouldn't have a noticable
effect on audio performance.;
#X text 12 40 -vstgui;
#X text 10 216 -pdgui;
#X text 14 62 if the plugin has a GUI editor it can be shown in a native
window \, otherwise the generic Pd editor is created.;
#X text 10 283 -nogui;
#X text 14 236 explicitly ask for the Pd editor. this *might* be better
for performance if you have lots of plugins and want to avoid creating
all those GUI threads on Windows and Linux.;
#X text 12 136 on MacOS \, however \, because of technical limitations
the GUI must run on the main thread - which happens to be the audio
thread in Pd... until we've found a better solution you are adviced
to keep the editor window closed in low-latency realtime situations
to avoid audio hick-ups - or use the Pd editor instead.;
#X text 15 16 vstplugin~ accepts three different GUI flags:;
#X text 15 304 don't use any GUI. this saves some memory and CPU cycles
but it probably won't matter a lot. if you don't really need any GUI
\, it doesn't harm to use this flag.;
#X restore 410 522 pd gui;
#X f 13;
#X text 408 504 about the GUI;
#X connect 1 0 31 0;
#X connect 1 1 31 1;
#X connect 2 0 12 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 12 0;
#X connect 6 0 12 0;
#X connect 7 0 6 0;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 12 0;
#X connect 13 0 31 0;
#X connect 29 0 12 0;
#X connect 31 0 0 0;
#X connect 31 1 0 1;
#X connect 31 2 11 0;
